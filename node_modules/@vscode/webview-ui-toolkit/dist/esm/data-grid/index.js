// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { __decorate } from "tslib";
import { customElement } from '@microsoft/fast-element';
import { createDataGridCellTemplate, createDataGridRowTemplate, createDataGridTemplate, DataGrid, DataGridCell, DataGridRow, } from '@microsoft/fast-foundation';
import { DataGridStyles as gridStyles } from './data-grid.styles';
import { DataGridRowStyles as rowStyles } from './data-grid-row.styles';
import { DataGridCellStyles as cellStyles } from './data-grid-cell.styles';
const gridTemplate = createDataGridTemplate('vscode');
const rowTemplate = createDataGridRowTemplate('vscode');
const cellTemplate = createDataGridCellTemplate('vscode');
/**
 * The Visual Studio Code data grid component.
 *
 * @remarks
 * HTML Element: `<vscode-data-grid>`
 *
 * @public
 */
let VSCodeDataGrid = class VSCodeDataGrid extends DataGrid {
    /**
     * Component lifecycle method that runs when the component is inserted
     * into the DOM.
     *
     * @internal
     */
    connectedCallback() {
        super.connectedCallback();
        // Sets a default ARIA label on the data grid only if an aria-label attribute
        // does not already exist
        const ariaLabelValue = this.getAttribute('aria-label');
        if (!ariaLabelValue) {
            this.setAttribute('aria-label', 'Data Grid');
        }
    }
};
VSCodeDataGrid = __decorate([
    customElement({
        name: 'vscode-data-grid',
        template: gridTemplate,
        styles: gridStyles,
    })
], VSCodeDataGrid);
export { VSCodeDataGrid };
/**
 * The Visual Studio Code data grid row component.
 *
 * @remarks
 * HTML Element: `<vscode-data-grid-row>`
 *
 * @public
 */
let VSCodeDataGridRow = class VSCodeDataGridRow extends DataGridRow {
};
VSCodeDataGridRow = __decorate([
    customElement({
        name: 'vscode-data-grid-row',
        template: rowTemplate,
        styles: rowStyles,
    })
], VSCodeDataGridRow);
export { VSCodeDataGridRow };
/**
 * The Visual Studio Code data grid cell component.
 *
 * @remarks
 * HTML Element: `<vscode-data-grid-cell>`
 *
 * @public
 */
let VSCodeDataGridCell = class VSCodeDataGridCell extends DataGridCell {
};
VSCodeDataGridCell = __decorate([
    customElement({
        name: 'vscode-data-grid-cell',
        template: cellTemplate,
        styles: cellStyles,
    })
], VSCodeDataGridCell);
export { VSCodeDataGridCell };
